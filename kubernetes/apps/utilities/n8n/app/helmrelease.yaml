---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: n8n
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync-system
  values:
    controllers:
      n8n:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17"
            envFrom:
              - secretRef:
                  name: n8n-secret
        containers:
          app:
            image:
              repository: docker.n8n.io/n8nio/n8n
              tag: 1.78.0
            env:
              TZ: Australia/Sydney
              N8N_HOST: 0.0.0.0
              N8N_PORT: 5678
              N8N_PROTOCOL: http
              N8N_LOG_LEVEL: info
              N8N_DIAGNOSTICS_ENABLED: false
              N8N_VERSION_NOTIFICATIONS_ENABLED: false
              N8N_TEMPLATES_ENABLED: false
              N8N_METRICS: true
              N8N_PERSONALIZATION_ENABLED: false
              N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
              WEBHOOK_URL: https://n8n.${SECRET_DOMAIN}
              GENERIC_TIMEZONE: Australia/Sydney
              # Database configuration
              DB_TYPE: postgresdb
              DB_POSTGRESDB_HOST: postgres16-rw.database.svc.cluster.local
              DB_POSTGRESDB_PORT: 5432
              DB_POSTGRESDB_DATABASE: n8n
              DB_POSTGRESDB_USER: n8n
              # File system configuration
              N8N_USER_FOLDER: /data
              N8N_BINARY_DATA_MODE: filesystem
            envFrom:
              - secretRef:
                  name: n8n-secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 5678
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: n8n
        ports:
          http:
            port: *port
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: &host n8n.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 20Gi
        storageClass: ceph-block
        globalMounts:
          - path: /data
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      cache:
        type: emptyDir
        globalMounts:
          - path: /home/node/.cache
