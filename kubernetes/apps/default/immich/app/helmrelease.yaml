---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: immich
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      immich:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: "17@sha256:86a1992d46273c58fd4ad95b626081dfaabfe16bd56944675169e406d1a660dd"
            envFrom: &envFrom
              - secretRef:
                  name: immich-secret
        containers:
          app:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: "release@sha256:72a9b9de6c6abfa7a9c9cdc244ae4d2bd9fea2ae00997f194cbd10aca72ea210"
            env:
              # Database
              DB_HOSTNAME: postgres16-rw.database.svc.cluster.local
              DB_USERNAME: immich
              DB_DATABASE_NAME: immich
              # Redis
              REDIS_HOSTNAME: dragonfly.database.svc.cluster.local
              REDIS_PORT: "6379"
              # Machine Learning
              IMMICH_MACHINE_LEARNING_URL: http://localhost:3003
              # Server port
              IMMICH_PORT: "3001"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/server/ping
                    port: &port 3001
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 8Gi
          machine-learning:
            image:
              repository: ghcr.io/immich-app/immich-machine-learning
              tag: "release@sha256:590a76bba3d88ccf78b03cde0c0fb8788f7d76ae6caf90ad33a34b5b4cc35f11"
            env:
              TRANSFORMERS_CACHE: /cache
              XDG_CACHE_HOME: /cache
              XDG_CONFIG_HOME: /cache
              MPLCONFIGDIR: /cache/matplotlib
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 3003
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 3003
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 5
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 4Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        fsGroup: 65534
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: immich
        ports:
          http:
            port: *port
    ingress:
      app:
        className: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: "Media"
          gethomepage.dev/name: "Immich"
          gethomepage.dev/icon: "immich.png"
          gethomepage.dev/description: "Self-hosted photo and video management"
        hosts:
          - host: immich.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        existingClaim: immich
      library:
        type: nfs
        server: 192.168.1.22
        path: /volume2/apps/immich
        globalMounts:
          - path: /usr/src/app/upload
      cache:
        type: emptyDir
        globalMounts:
          - path: /cache
      tmp:
        type: emptyDir
