---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: thanos
spec:
  interval: 30m
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: thanos
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    # Allow using official upstream Thanos images instead of Bitnami images
    global:
      security:
        allowInsecureImages: true

    # Use official upstream Thanos images, not Bitnami
    image:
      registry: quay.io
      repository: thanos/thanos
      tag: v0.40.1

    # Object storage configuration
    existingObjstoreSecret: thanos-objstore-secret  # pragma: allowlist secret
    objstoreConfig:
      type: s3
      config:
        insecure: true

    # Thanos Query - Aggregates data from sidecars and object storage
    query:
      enabled: true
      replicaCount: 1
      replicaLabel: ["__replica__"]
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: observability
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          memory: 1Gi

    # Query Frontend - Caching layer for queries (Grafana connects here)
    queryFrontend:
      enabled: true
      replicaCount: 1
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          memory: 1Gi
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Observability
          gethomepage.dev/name: "Thanos Query"
          gethomepage.dev/icon: thanos.png
          gethomepage.dev/description: "Long-term metrics storage"
        hostname: thanos.${SECRET_DOMAIN}
        tls: true

    # Bucket Web - Browse object storage via web UI
    bucketweb:
      enabled: true
      replicaCount: 1
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          memory: 512Mi

    # Store Gateway - Accesses historical data from object storage
    storegateway:
      enabled: true
      replicaCount: 1
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          memory: 1Gi

    # Compactor - Downsamples and compacts object storage data
    compactor:
      enabled: true
      retentionResolutionRaw: 14d    # Keep raw data for 14 days
      retentionResolution5m: 30d     # Keep 5m downsampled for 30 days
      retentionResolution1h: 90d     # Keep 1h downsampled for 90 days
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      resources:
        requests:
          cpu: 10m
          memory: 256Mi
        limits:
          memory: 1Gi

    # Ruler - Evaluates recording and alerting rules on historical data
    ruler:
      enabled: true
      replicaCount: 1
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.observability.svc.cluster.local:9093
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                annotations:
                  summary: "Prometheus has disappeared from Thanos target discovery"
                  description: "Prometheus instance has been down for more than 5 minutes"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
                for: 5m
                labels:
                  severity: critical
                  component: monitoring
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: openebs-hostpath
        size: 10Gi
      resources:
        requests:
          cpu: 10m
          memory: 128Mi
        limits:
          memory: 512Mi

    # Enable Prometheus metrics for all components
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
